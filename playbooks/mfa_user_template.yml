---
- name: Configurar MFA para usuario específico
  hosts: usuarios_mfa
  become: true
  vars:
    mfa_user: "juan"
    secret_path: "/home/{{ mfa_user }}/.google_authenticator"
    qr_temp_path: "/tmp/{{ mfa_user }}_mfa_qr.png"
    local_qr_path: "/tmp/{{ mfa_user }}_mfa_qr.png"

  tasks:

    - name: Eliminar archivos anteriores si existen
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - "{{ secret_path }}"
        - "{{ qr_temp_path }}"

    - name: Crear secreto TOTP
      ansible.builtin.shell: |
        head /dev/urandom | tr -dc A-Z2-7 | head -c 16
      register: secret

    - name: Establecer el secreto como un fact global para acceso en localhost
      ansible.builtin.set_fact:
        global_mfa_secret: "{{ secret.stdout }}"
      delegate_to: localhost
      run_once: true

    - name: Crear archivo .google_authenticator
      ansible.builtin.copy:
        dest: "{{ secret_path }}"
        content: |
          {{ secret.stdout }}
          RATE_LIMIT 3 30
          DISALLOW_REUSE
          TOTP_AUTH
          WINDOW_SIZE 3
        mode: '0600'
        owner: "{{ mfa_user }}"
        group: "{{ mfa_user }}"

    - name: Asegurar que 'qrencode' está instalado
      ansible.builtin.package:
        name: qrencode
        state: present
      when: ansible_os_family == "Debian" or ansible_os_family == "RedHat"

    - name: Generar imagen QR del TOTP en /tmp
      ansible.builtin.command:
        cmd: >
          qrencode -o {{ qr_temp_path }}
          "otpauth://totp/ServerHardening:{{ mfa_user }}?secret={{ secret.stdout }}&issuer=ServerHardening&digits=6&period=30&algorithm=SHA1"
      args:
        creates: "{{ qr_temp_path }}"

    - name: Asignar permisos del QR al usuario
      ansible.builtin.file:
        path: "{{ qr_temp_path }}"
        owner: "{{ mfa_user }}"
        group: "{{ mfa_user }}"
        mode: '0644'

    - name: Copiar imagen QR al bastion en /tmp
      ansible.builtin.fetch:
        src: "{{ qr_temp_path }}"
        dest: "{{ local_qr_path }}"
        flat: yes

    - name: Eliminar QR temporal del host remoto
      ansible.builtin.file:
        path: "{{ qr_temp_path }}"
        state: absent

    - name: Mostrar datos esenciales para MFA
      delegate_to: localhost
      run_once: true
      ansible.builtin.debug:
        msg: |
          Secreto MFA para {{ mfa_user }}: {{ global_mfa_secret }}
          URI otpauth: otpauth://totp/ServerHardening:{{ mfa_user }}?secret={{ global_mfa_secret }}&issuer=ServerHardening&digits=6&period=30&algorithm=SHA1
